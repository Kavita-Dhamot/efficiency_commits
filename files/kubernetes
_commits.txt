commit faaae714274c2fd0eb6ce71a77d54106b7689e3d
Merge: c98ccce62fe 3c197c55ffb
Author: Kubernetes Prow Robot <k8s-ci-robot@users.noreply.github.com>
Date:   Thu Jan 14 07:15:17 2021 -0800

    Merge pull request #97794 from chendave/cleanup_status
    
    Refactor: rewrite `Merge` method to address readability and efficiency

commit 3c197c55ffb4ed824bf664731eff0d8ff5a0adb3
Author: Dave Chen <dave.jungler@gmail.com>
Date:   Thu Jan 7 16:36:30 2021 +0800

    Refactor: rewrite `Merge` method to address readability and efficiency
    
    Signed-off-by: Dave Chen <dave.chen@arm.com>

commit 245189b8a198e9e29494b2d992dc05bd7164c973
Merge: 1679bed8034 55881f2fc4b
Author: Kubernetes Prow Robot <k8s-ci-robot@users.noreply.github.com>
Date:   Tue Oct 15 07:11:52 2019 -0700

    Merge pull request #83747 from JohnStrunk/csi-fsgroup-fix
    
    Improve efficiency of csiMountMgr.GetAttributes

commit 55881f2fc4b8dacdba32a317d92e4ca1f1013512
Author: John Strunk <jstrunk@redhat.com>
Date:   Thu Oct 10 13:51:50 2019 -0400

    Improve efficiency of csiMountMgr.GetAttributes
    
    GetAttributes is called repeatedly while setting the fsGroup of a
    volume. Previously, it recalculated whether SELinux was supported during
    each call. This resulted in volume.SetVolumeOwnership taking a long
    time, delaying pod startup for high file count volumes.
    
    This change checks the SELinux status once, right after node publish,
    allowing GetAttributes to simply build and return a struct.
    
    Signed-off-by: John Strunk <jstrunk@redhat.com>

commit 273e1a4605e438ccfcfe5c2080e08d308b9b9066
Merge: 91bec13163b 8c10d929cac
Author: Kubernetes Prow Robot <k8s-ci-robot@users.noreply.github.com>
Date:   Wed Aug 28 03:09:38 2019 -0700

    Merge pull request #81896 from liggitt/webhook-efficiency
    
    Compute webhook selectors and client once per webhookconfig revision

commit f1693efe3713f065d33a5f0d31df0bec0a966bc0
Merge: 4e8dd70234e cea9d65a2c9
Author: Kubernetes Prow Robot <k8s-ci-robot@users.noreply.github.com>
Date:   Fri Apr 5 10:21:44 2019 -0700

    Merge pull request #76196 from kubernetes/revert-75547-improve_the_efficiency_of_delivery_watch_events
    
    Revert "delivery event non blocking firstly"

commit c19dc742c4e05fb7c53e54e527f43eccd174ecc1
Merge: be374388f6f 8910abfdf3d
Author: Kubernetes Prow Robot <k8s-ci-robot@users.noreply.github.com>
Date:   Wed Apr 3 03:23:43 2019 -0700

    Merge pull request #75547 from hormes/improve_the_efficiency_of_delivery_watch_events
    
    delivery event non blocking firstly

commit ad6d3b4de082ef80e0343408b93762261b71c39d
Merge: c0d248ad3ad dba032d5e74
Author: k8s-ci-robot <k8s-ci-robot@users.noreply.github.com>
Date:   Mon Nov 5 04:22:56 2018 -0800

    Merge pull request #70629 from code-sleuth/develop
    
    Improve`kubectl get` sorting efficiency

commit dba032d5e74dded1f6bb75c9ca444e3e7a3fb6e9
Author: Ibrahim Mbaziira <code.ibra@gmail.com>
Date:   Sun Nov 4 22:29:40 2018 +0300

    improve sorting efficiency

commit 4a44cda40aea2c7a01eaf0d751213c9b765a19f1
Merge: 15cd3552819 3a2e3bcc70e
Author: Kubernetes Submit Queue <k8s-merge-robot@users.noreply.github.com>
Date:   Wed May 30 08:42:11 2018 -0700

    Merge pull request #63328 from vikaschoudhary16/probe-watcher-duplicate
    
    Automatic merge from submit-queue (batch tested with PRs 63328, 64316, 64444, 64449, 64453). If you want to cherry-pick this change to another branch, please follow the instructions <a href="https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md">here</a>.
    
    Add probe based mechanism for kubelet plugin discovery
    
    **Which issue(s) this PR fixes**
    Fixes #56944
    [Design Doc](https://docs.google.com/document/d/1dtHpGY-gPe9sY7zzMGnm8Ywo09zJfNH-E1KEALFV39s/edit#heading=h.7fe6spexljh6)
    
    **Notes For Reviewers**:
    Original PR is https://github.com/kubernetes/kubernetes/pull/59963. But because of too many comments(171) that PR does not open sometimes. Therefore this new PR is created to get the github link working.
    
    Related PR is https://github.com/kubernetes/kubernetes/pull/58755
    For review efficiency, separating out of the commits or original PR here.
    
    ```release-note
    Add probe based mechanism for kubelet plugin discovery
    ```
    /sig node
    /area hw-accelerators
    /cc @jiayingz @RenaudWasTaken @vishh @ScorpioCPH @sjenning @derekwaynecarr @jeremyeder @lichuqiang @tengqm @saad-ali @chakri-nelluri @ConnorDoyle @vladimirvivien

commit ce9f3bcfefdbbaaec2c2c3f71f81c617dbd1e242
Author: Andrzej Wasylkowski <wasylkowski@google.com>
Date:   Thu Jun 1 13:13:18 2017 +0200

    Added an end-to-end test measuring autoscaling's efficiency.

commit ec1d79da191c33e5b16b58e808880d522d3313d2
Author: Jordan Liggitt <jliggitt@redhat.com>
Date:   Mon May 22 21:15:14 2017 -0400

    gonum: directed acyclic graph
    
    Implements graph.Directed capable of storing at most one edge between any two nodes.
    Uses the Undirected implementation for space efficiency (~30% space savings).

commit 20ec8912d096e6cf0daabb3268dc8e73af743ebf
Merge: 78ced8e4553 503c19aec34
Author: Kubernetes Submit Queue <k8s-merge-robot@users.noreply.github.com>
Date:   Tue May 30 06:27:18 2017 -0700

    Merge pull request #45421 from allencloud/change-to-use-make-slice-to-store-objects
    
    Automatic merge from submit-queue
    
    use make slice to store objects to improve efficiency
    
    Signed-off-by: allencloud <allen.sun@daocloud.io>
    
    
    
    **What this PR does / why we need it**:
    
    we we know the slice length in advance, I think we had better use make to create the specified length of slice. This will improve some kind of performance. Since if we create a slice with []type{}, we did not know how much space runtime should reserve, since slice implementation should be continuous in memory. While when we make a slice with specified length, runtime would reserve a continuous memory space which will not result in slice movement in case of current space is not enough.
    
    **Which issue this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close that issue when PR gets merged)*: fixes #
    NONE
    
    **Special notes for your reviewer**:
    NONE
    
    **Release note**:
    
    ```release-note
    NONE
    ```

commit 503c19aec34dd65d994a057ecfb8fce960e9ad5a
Author: allencloud <allen.sun@daocloud.io>
Date:   Fri May 5 23:25:56 2017 +0800

    use make slice to store objects to improve efficiency
    
    Signed-off-by: allencloud <allen.sun@daocloud.io>

commit 6bda989d5497f47f4454a7fc81eaea877f404861
Merge: 850c586b69f a0a0e61f620
Author: Kubernetes Submit Queue <k8s-merge-robot@users.noreply.github.com>
Date:   Fri Oct 21 08:39:09 2016 -0700

    Merge pull request #35227 from deads2k/controller-13-generic-infromer
    
    Automatic merge from submit-queue
    
    add generic shared informer backed by existing informer
    
    Adds the ability to get an informer and lister that returns `[]runtime.Object` methods with the "normal" filtering capabilities based on a `GroupResource`. Right now, it only works on known types (and re-uses those caches for efficiency by having a different skin on the `Index`).  It should be extended in the future.
    
    @derekwaynecarr I think this gives you the types you were looking for to avoid the ugly array copies.

commit 0d9685b0b57e5b64de896568b1fbd0a7bb4dc1d8
Merge: 15344153238 d122de5371d
Author: Kubernetes Submit Queue <k8s-merge-robot@users.noreply.github.com>
Date:   Fri Sep 16 00:40:24 2016 -0700

    Merge pull request #32805 from caesarxuchao/more-gc-optimization
    
    Automatic merge from submit-queue
    
    Add the uid in a delete event to the absentOwnerCache
    
    This is a small optimization to further reduce the traffic sent by the GC.
    
    In #31167, GC caches the non-existent owners when it processes the dirtyQueue. As discovered in #32571, there is still small inefficiency, because there are multiple goroutines processing the dirtyQueue, many of them might send a GET to the apiserver before the cache gets populated.
    
    This PR populates the cache when GC observes an object gets deleted, which happens before the processing of the dirtyQueue, so it avoids the simultaneous GET sent by the GC workers.
    
    cc @lavalamp

commit ce7a993269d2b157d5a856d2f07d71ab77c98efa
Author: Lénaïc Huard <lhuard@amadeus.com>
Date:   Tue Feb 17 22:20:07 2015 +0100

    libvirt-coreos cluster provider
    
    libvirt-coreos is a cluster provider for kubernetes that starts local VMs and
    runs kubernetes on it.
    Its goal is to provide a multi-machines environment to develop and test kubernetes.
    
    The purpose is mostly the same as the vagrant provider but with a big focus on
    efficiency. The vagrant cluster takes a long time to boot and consumes a huge
    amount of disk space. libvirt-coreos aims at being cheaper. As a consequence,
    libvirt-coreos allows to start bigger clusters with more minions than vagrant.

commit 1d12cad456d54df3a1baa6a7ce6276060d8a26ff
Author: Rajat Chopra <rchopra@redhat.com>
Date:   Mon Feb 9 13:58:45 2015 -0800

    Fix vagrant networking. Include the master as part of overlay. And remove STP for efficiency.
    fix e2e services for vagrant
    Kubelet should wait on SDN to finish
    Do not require docker on master for default clouds

commit b61ea1bbf1ada4b9d2eafd61a2341fc9ae614247
Author: Rajat Chopra <rchopra@redhat.com>
Date:   Thu Feb 5 17:40:45 2015 -0800

    Fix vagrant networking. Include the master as part of overlay. And remove STP for efficiency.
